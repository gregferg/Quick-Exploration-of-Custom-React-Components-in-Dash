{
  "src/lib/components/CustomReactComponent.react.js": {
    "description": "ExampleComponent is an example component.\nIt takes a property, `label`, and\ndisplays it.\nIt renders an input with the property `value`\nwhich is editable by the user.", 
    "displayName": "CustomReactComponent", 
    "methods": [
      {
        "name": "onClick", 
        "docblock": null, 
        "modifiers": [], 
        "params": [], 
        "returns": null
      }, 
      {
        "name": "startTicking", 
        "docblock": null, 
        "modifiers": [], 
        "params": [], 
        "returns": null
      }, 
      {
        "name": "tick", 
        "docblock": null, 
        "modifiers": [], 
        "params": [], 
        "returns": null
      }
    ], 
    "props": {
      "id": {
        "type": {
          "name": "string"
        }, 
        "required": false, 
        "description": "The ID used to identify this component in Dash callbacks."
      }, 
      "label": {
        "type": {
          "name": "string"
        }, 
        "required": true, 
        "description": "A label that will be printed when this component is rendered."
      }, 
      "value": {
        "type": {
          "name": "string"
        }, 
        "required": false, 
        "description": "The value displayed in the input."
      }, 
      "shouldBeTicking": {
        "type": {
          "name": "bool"
        }, 
        "required": false, 
        "description": "If the counter should start counting on load.", 
        "defaultValue": {
          "value": "true", 
          "computed": false
        }
      }, 
      "setProps": {
        "type": {
          "name": "func"
        }, 
        "required": false, 
        "description": "Dash-assigned callback that should be called to report property changes\nto Dash, to make them available for callbacks."
      }
    }
  }, 
  "src/lib/components/CustomReactRenderComponent.react.js": {
    "description": "ExampleComponent is an example component.\nIt takes a property, `label`, and\ndisplays it.\nIt renders an input with the property `value`\nwhich is editable by the user.", 
    "displayName": "TestReact", 
    "methods": [], 
    "props": {
      "text": {
        "type": {
          "name": "string"
        }, 
        "required": false, 
        "description": "The ID used to identify this component in Dash callbacks."
      }, 
      "setProps": {
        "type": {
          "name": "func"
        }, 
        "required": false, 
        "description": "Dash-assigned callback that should be called to report property changes\nto Dash, to make them available for callbacks."
      }
    }
  }, 
  "src/lib/components/GenericButton.react.js": {
    "description": "ExampleComponent is an example component.\nIt takes a property, `label`, and\ndisplays it.\nIt renders an input with the property `value`\nwhich is editable by the user.", 
    "displayName": "GenericButton", 
    "methods": [], 
    "props": {
      "buttonAction": {
        "type": {
          "name": "func"
        }, 
        "required": false, 
        "description": "The ID used to identify this component in Dash callbacks."
      }, 
      "buttonLabel": {
        "type": {
          "name": "string"
        }, 
        "required": false, 
        "description": ""
      }, 
      "setProps": {
        "type": {
          "name": "func"
        }, 
        "required": false, 
        "description": "Dash-assigned callback that should be called to report property changes\nto Dash, to make them available for callbacks."
      }
    }
  }
}